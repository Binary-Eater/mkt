From ec70c19527eb0b80ace2f394eed5ab62c5b52e0d Mon Sep 17 00:00:00 2001
From: Hasan Emar <hasane@mellanox.com>
Date: Tue, 11 Aug 2020 09:52:19 +0300
Subject: [PATCH 3/3] mlx5+infra: Added support to ODP in UD

In UD connection type, odp supported just in
send operations.

Signed-off-by: Hasan Emar <hasane@mellanox.com>
Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
---
 mellanox/mlx5/mlx5_cmdif.h           |  2 ++
 mellanox/mlx5/mlx5_cmdif_tpt.c       |  3 +++
 mellanox/mlx5/mlx5_config_defaults.c |  2 +-
 mellanox/mlx5/mlx5_dataif_wqe.c      | 12 +++++++++++-
 mlnx_infra/simx-qemu.cfg             |  2 +-
 5 files changed, 18 insertions(+), 3 deletions(-)

diff --git a/mellanox/mlx5/mlx5_cmdif.h b/mellanox/mlx5/mlx5_cmdif.h
index 1f9dc7761825..42b84ca16b32 100644
--- a/mellanox/mlx5/mlx5_cmdif.h
+++ b/mellanox/mlx5/mlx5_cmdif.h
@@ -19,6 +19,8 @@
 #include "mellanox/mlx_log.h"
 #include <stdarg.h>

+#include "mlx5_dataif_wqe.h"
+
 #define MLX5_MEMIC_BUFFER_SIZE_OF_CHUNK_IN_BYTES 64
 #define MLX5_NVMF_PAS_PADDING_SIZE_IN_BYTES 64

diff --git a/mellanox/mlx5/mlx5_cmdif_tpt.c b/mellanox/mlx5/mlx5_cmdif_tpt.c
index 1647808e9957..f2145dc0d73e 100644
--- a/mellanox/mlx5/mlx5_cmdif_tpt.c
+++ b/mellanox/mlx5/mlx5_cmdif_tpt.c
@@ -907,6 +907,9 @@ int mlx5_opcode_PAGE_FAULT_RESUME(MLX5State *s, const void *in_buf, void *out_bu
         case MLX5_PAGE_FAULT_TYPE_REQUESTER_QP_WQE_ON_READ_OR_ATOMIC:
             cur_wq = &s->common_wq_arr[wq_num];
             cur_wq->odp.cur_page_faults_types &= (~page_fault_ctx->page_fault_type_for_qp);
+            if (page_fault_type == MLX5_PAGE_FAULT_TYPE_REQUESTER_QP_WQE_ON_SEND_OR_WRITE) {
+                mlx5_handle_post_send_wqes(s, wq_num, true);
+            }
             break;

         default:
diff --git a/mellanox/mlx5/mlx5_config_defaults.c b/mellanox/mlx5/mlx5_config_defaults.c
index bb126ed72671..f4a7cb58d5bd 100644
--- a/mellanox/mlx5/mlx5_config_defaults.c
+++ b/mellanox/mlx5/mlx5_config_defaults.c
@@ -408,7 +408,7 @@ static const MLX5Configuration mlx5_config_defaults = {

     /* UD ODP Capabilities */
     .ud_odp_caps = {
-        .send = false,
+        .send = true,
         .receive = false,
         .write = false,
         .read = false,
diff --git a/mellanox/mlx5/mlx5_dataif_wqe.c b/mellanox/mlx5/mlx5_dataif_wqe.c
index f90cf91a2790..38baddba543a 100644
--- a/mellanox/mlx5/mlx5_dataif_wqe.c
+++ b/mellanox/mlx5/mlx5_dataif_wqe.c
@@ -11141,9 +11141,13 @@ int mlx5_post_send(MLX5State *s, const void *tmp_wqe, uint32_t qp_num, uint16_t
                 if (s->common_wq_arr[qp_num].odp.page_fault) {
                     rc = 0;
                     syndrome = 0;
-                    need_to_generate_cqe = false;
                     cur_wq->odp.page_fault = false;
                     cur_wq->odp.need_to_retransmit = true;
+                    if (mlx5_is_reliable_qp(s, qp_num)) {
+                        need_to_generate_cqe = false;
+                    } else {
+                        goto out;
+                    }
                     goto generate_cqe_and_return;
                 }
             } else {
@@ -11257,6 +11261,7 @@ generate_cqe_and_return:
     rc = mlx5_handle_send_cqe_generation(s, qp_num, wqe_counter, opcode,
                                          MLX5_GET(ctrl_seg, tmp_wqe, ce), syndrome, cqe_format, byte_cnt,
                                          inline_data, need_to_generate_cqe);
+out:
     MLX_LOG_DBG(WQ, "Send WQE processing: %s ended\n", __func__);
     return rc;
 }
@@ -11561,6 +11566,11 @@ void mlx5_handle_post_send_wqes(MLX5State *s, uint32_t qp_num, bool read_sw_dbr)

         /* check & execute WQE */
         ret = mlx5_post_send(s, cur_wq->snd_wqe_buf, qp_num, MLX5_GET(ctrl_seg, cur_wq->snd_wqe_buf, wqe_index), wqe_counter);
+        if (!mlx5_is_reliable_qp(s, qp_num) && cur_wq->odp.need_to_retransmit) {
+            MLX_LOG_DBG(WQ, "Send WQE 0x%x: cant continue sending after page fault occurred, and not updating HW counter\n", qp_num);
+            cur_wq->odp.need_to_retransmit = false;
+            break;
+        }
         /* update hw counter */
         if (cur_wq->wq_type == MLX5_COMMON_WQ_QP) {
             int offset_to_add = (int)mlx_do_ceil(MLX5_GET_WQE_DS_IN_BYTES(ds_in_wqe) / (double)MLX5_SQ_WQEBB_SZ_IN_BYTES);
diff --git a/mlnx_infra/simx-qemu.cfg b/mlnx_infra/simx-qemu.cfg
index 939bd6524c2d..44dc44c0d174 100644
--- a/mlnx_infra/simx-qemu.cfg
+++ b/mlnx_infra/simx-qemu.cfg
@@ -5079,7 +5079,7 @@
 [UD ODP Capabilities]
 #######################################
 # If set, send operations are supported
-#send = false
+#send = true

 # If set, receive operations are supported
 #receive = false
--
2.26.2

